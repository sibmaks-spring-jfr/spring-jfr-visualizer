// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common.proto
// Protobuf Java Version: 4.29.3

package io.github.sibmaks.spring.jfr.dto.protobuf.common;

/**
 * Protobuf type {@code io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport}
 */
public final class RootReport extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport)
    RootReportOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      RootReport.class.getName());
  }
  // Use RootReport.newBuilder() to construct.
  private RootReport(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private RootReport() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.github.sibmaks.spring.jfr.dto.protobuf.common.Common.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_common_RootReport_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.github.sibmaks.spring.jfr.dto.protobuf.common.Common.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_common_RootReport_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport.class, io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport.Builder.class);
  }

  private int bitField0_;
  public static final int COMMON_FIELD_NUMBER = 1;
  private io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto common_;
  /**
   * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto common = 1;</code>
   * @return Whether the common field is set.
   */
  @java.lang.Override
  public boolean hasCommon() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto common = 1;</code>
   * @return The common.
   */
  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto getCommon() {
    return common_ == null ? io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto.getDefaultInstance() : common_;
  }
  /**
   * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto common = 1;</code>
   */
  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDtoOrBuilder getCommonOrBuilder() {
    return common_ == null ? io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto.getDefaultInstance() : common_;
  }

  public static final int BEANS_FIELD_NUMBER = 2;
  private io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport beans_;
  /**
   * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport beans = 2;</code>
   * @return Whether the beans field is set.
   */
  @java.lang.Override
  public boolean hasBeans() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport beans = 2;</code>
   * @return The beans.
   */
  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport getBeans() {
    return beans_ == null ? io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport.getDefaultInstance() : beans_;
  }
  /**
   * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport beans = 2;</code>
   */
  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReportOrBuilder getBeansOrBuilder() {
    return beans_ == null ? io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport.getDefaultInstance() : beans_;
  }

  public static final int CALLS_FIELD_NUMBER = 3;
  private io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport calls_;
  /**
   * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport calls = 3;</code>
   * @return Whether the calls field is set.
   */
  @java.lang.Override
  public boolean hasCalls() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport calls = 3;</code>
   * @return The calls.
   */
  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport getCalls() {
    return calls_ == null ? io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport.getDefaultInstance() : calls_;
  }
  /**
   * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport calls = 3;</code>
   */
  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReportOrBuilder getCallsOrBuilder() {
    return calls_ == null ? io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport.getDefaultInstance() : calls_;
  }

  public static final int CONNECTIONS_FIELD_NUMBER = 4;
  private io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport connections_;
  /**
   * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport connections = 4;</code>
   * @return Whether the connections field is set.
   */
  @java.lang.Override
  public boolean hasConnections() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport connections = 4;</code>
   * @return The connections.
   */
  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport getConnections() {
    return connections_ == null ? io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport.getDefaultInstance() : connections_;
  }
  /**
   * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport connections = 4;</code>
   */
  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReportOrBuilder getConnectionsOrBuilder() {
    return connections_ == null ? io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport.getDefaultInstance() : connections_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getCommon());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getBeans());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(3, getCalls());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(4, getConnections());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getCommon());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getBeans());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getCalls());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getConnections());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport)) {
      return super.equals(obj);
    }
    io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport other = (io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport) obj;

    if (hasCommon() != other.hasCommon()) return false;
    if (hasCommon()) {
      if (!getCommon()
          .equals(other.getCommon())) return false;
    }
    if (hasBeans() != other.hasBeans()) return false;
    if (hasBeans()) {
      if (!getBeans()
          .equals(other.getBeans())) return false;
    }
    if (hasCalls() != other.hasCalls()) return false;
    if (hasCalls()) {
      if (!getCalls()
          .equals(other.getCalls())) return false;
    }
    if (hasConnections() != other.hasConnections()) return false;
    if (hasConnections()) {
      if (!getConnections()
          .equals(other.getConnections())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasCommon()) {
      hash = (37 * hash) + COMMON_FIELD_NUMBER;
      hash = (53 * hash) + getCommon().hashCode();
    }
    if (hasBeans()) {
      hash = (37 * hash) + BEANS_FIELD_NUMBER;
      hash = (53 * hash) + getBeans().hashCode();
    }
    if (hasCalls()) {
      hash = (37 * hash) + CALLS_FIELD_NUMBER;
      hash = (53 * hash) + getCalls().hashCode();
    }
    if (hasConnections()) {
      hash = (37 * hash) + CONNECTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getConnections().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport)
      io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReportOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.common.Common.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_common_RootReport_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.common.Common.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_common_RootReport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport.class, io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport.Builder.class);
    }

    // Construct using io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getCommonFieldBuilder();
        getBeansFieldBuilder();
        getCallsFieldBuilder();
        getConnectionsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      common_ = null;
      if (commonBuilder_ != null) {
        commonBuilder_.dispose();
        commonBuilder_ = null;
      }
      beans_ = null;
      if (beansBuilder_ != null) {
        beansBuilder_.dispose();
        beansBuilder_ = null;
      }
      calls_ = null;
      if (callsBuilder_ != null) {
        callsBuilder_.dispose();
        callsBuilder_ = null;
      }
      connections_ = null;
      if (connectionsBuilder_ != null) {
        connectionsBuilder_.dispose();
        connectionsBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.common.Common.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_common_RootReport_descriptor;
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport getDefaultInstanceForType() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport.getDefaultInstance();
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport build() {
      io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport buildPartial() {
      io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport result = new io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.common_ = commonBuilder_ == null
            ? common_
            : commonBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.beans_ = beansBuilder_ == null
            ? beans_
            : beansBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.calls_ = callsBuilder_ == null
            ? calls_
            : callsBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.connections_ = connectionsBuilder_ == null
            ? connections_
            : connectionsBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport) {
        return mergeFrom((io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport other) {
      if (other == io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport.getDefaultInstance()) return this;
      if (other.hasCommon()) {
        mergeCommon(other.getCommon());
      }
      if (other.hasBeans()) {
        mergeBeans(other.getBeans());
      }
      if (other.hasCalls()) {
        mergeCalls(other.getCalls());
      }
      if (other.hasConnections()) {
        mergeConnections(other.getConnections());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getCommonFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getBeansFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getCallsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getConnectionsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto common_;
    private com.google.protobuf.SingleFieldBuilder<
        io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto, io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDtoOrBuilder> commonBuilder_;
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto common = 1;</code>
     * @return Whether the common field is set.
     */
    public boolean hasCommon() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto common = 1;</code>
     * @return The common.
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto getCommon() {
      if (commonBuilder_ == null) {
        return common_ == null ? io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto.getDefaultInstance() : common_;
      } else {
        return commonBuilder_.getMessage();
      }
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto common = 1;</code>
     */
    public Builder setCommon(io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto value) {
      if (commonBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        common_ = value;
      } else {
        commonBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto common = 1;</code>
     */
    public Builder setCommon(
        io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto.Builder builderForValue) {
      if (commonBuilder_ == null) {
        common_ = builderForValue.build();
      } else {
        commonBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto common = 1;</code>
     */
    public Builder mergeCommon(io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto value) {
      if (commonBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          common_ != null &&
          common_ != io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto.getDefaultInstance()) {
          getCommonBuilder().mergeFrom(value);
        } else {
          common_ = value;
        }
      } else {
        commonBuilder_.mergeFrom(value);
      }
      if (common_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto common = 1;</code>
     */
    public Builder clearCommon() {
      bitField0_ = (bitField0_ & ~0x00000001);
      common_ = null;
      if (commonBuilder_ != null) {
        commonBuilder_.dispose();
        commonBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto common = 1;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto.Builder getCommonBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getCommonFieldBuilder().getBuilder();
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto common = 1;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDtoOrBuilder getCommonOrBuilder() {
      if (commonBuilder_ != null) {
        return commonBuilder_.getMessageOrBuilder();
      } else {
        return common_ == null ?
            io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto.getDefaultInstance() : common_;
      }
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto common = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto, io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDtoOrBuilder> 
        getCommonFieldBuilder() {
      if (commonBuilder_ == null) {
        commonBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto, io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDto.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.common.CommonDtoOrBuilder>(
                getCommon(),
                getParentForChildren(),
                isClean());
        common_ = null;
      }
      return commonBuilder_;
    }

    private io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport beans_;
    private com.google.protobuf.SingleFieldBuilder<
        io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReportOrBuilder> beansBuilder_;
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport beans = 2;</code>
     * @return Whether the beans field is set.
     */
    public boolean hasBeans() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport beans = 2;</code>
     * @return The beans.
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport getBeans() {
      if (beansBuilder_ == null) {
        return beans_ == null ? io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport.getDefaultInstance() : beans_;
      } else {
        return beansBuilder_.getMessage();
      }
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport beans = 2;</code>
     */
    public Builder setBeans(io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport value) {
      if (beansBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        beans_ = value;
      } else {
        beansBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport beans = 2;</code>
     */
    public Builder setBeans(
        io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport.Builder builderForValue) {
      if (beansBuilder_ == null) {
        beans_ = builderForValue.build();
      } else {
        beansBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport beans = 2;</code>
     */
    public Builder mergeBeans(io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport value) {
      if (beansBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          beans_ != null &&
          beans_ != io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport.getDefaultInstance()) {
          getBeansBuilder().mergeFrom(value);
        } else {
          beans_ = value;
        }
      } else {
        beansBuilder_.mergeFrom(value);
      }
      if (beans_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport beans = 2;</code>
     */
    public Builder clearBeans() {
      bitField0_ = (bitField0_ & ~0x00000002);
      beans_ = null;
      if (beansBuilder_ != null) {
        beansBuilder_.dispose();
        beansBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport beans = 2;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport.Builder getBeansBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getBeansFieldBuilder().getBuilder();
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport beans = 2;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReportOrBuilder getBeansOrBuilder() {
      if (beansBuilder_ != null) {
        return beansBuilder_.getMessageOrBuilder();
      } else {
        return beans_ == null ?
            io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport.getDefaultInstance() : beans_;
      }
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport beans = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReportOrBuilder> 
        getBeansFieldBuilder() {
      if (beansBuilder_ == null) {
        beansBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReportOrBuilder>(
                getBeans(),
                getParentForChildren(),
                isClean());
        beans_ = null;
      }
      return beansBuilder_;
    }

    private io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport calls_;
    private com.google.protobuf.SingleFieldBuilder<
        io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReportOrBuilder> callsBuilder_;
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport calls = 3;</code>
     * @return Whether the calls field is set.
     */
    public boolean hasCalls() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport calls = 3;</code>
     * @return The calls.
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport getCalls() {
      if (callsBuilder_ == null) {
        return calls_ == null ? io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport.getDefaultInstance() : calls_;
      } else {
        return callsBuilder_.getMessage();
      }
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport calls = 3;</code>
     */
    public Builder setCalls(io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport value) {
      if (callsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        calls_ = value;
      } else {
        callsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport calls = 3;</code>
     */
    public Builder setCalls(
        io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport.Builder builderForValue) {
      if (callsBuilder_ == null) {
        calls_ = builderForValue.build();
      } else {
        callsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport calls = 3;</code>
     */
    public Builder mergeCalls(io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport value) {
      if (callsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          calls_ != null &&
          calls_ != io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport.getDefaultInstance()) {
          getCallsBuilder().mergeFrom(value);
        } else {
          calls_ = value;
        }
      } else {
        callsBuilder_.mergeFrom(value);
      }
      if (calls_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport calls = 3;</code>
     */
    public Builder clearCalls() {
      bitField0_ = (bitField0_ & ~0x00000004);
      calls_ = null;
      if (callsBuilder_ != null) {
        callsBuilder_.dispose();
        callsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport calls = 3;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport.Builder getCallsBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getCallsFieldBuilder().getBuilder();
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport calls = 3;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReportOrBuilder getCallsOrBuilder() {
      if (callsBuilder_ != null) {
        return callsBuilder_.getMessageOrBuilder();
      } else {
        return calls_ == null ?
            io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport.getDefaultInstance() : calls_;
      }
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport calls = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReportOrBuilder> 
        getCallsFieldBuilder() {
      if (callsBuilder_ == null) {
        callsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReport.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallsReportOrBuilder>(
                getCalls(),
                getParentForChildren(),
                isClean());
        calls_ = null;
      }
      return callsBuilder_;
    }

    private io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport connections_;
    private com.google.protobuf.SingleFieldBuilder<
        io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReportOrBuilder> connectionsBuilder_;
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport connections = 4;</code>
     * @return Whether the connections field is set.
     */
    public boolean hasConnections() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport connections = 4;</code>
     * @return The connections.
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport getConnections() {
      if (connectionsBuilder_ == null) {
        return connections_ == null ? io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport.getDefaultInstance() : connections_;
      } else {
        return connectionsBuilder_.getMessage();
      }
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport connections = 4;</code>
     */
    public Builder setConnections(io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport value) {
      if (connectionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        connections_ = value;
      } else {
        connectionsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport connections = 4;</code>
     */
    public Builder setConnections(
        io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport.Builder builderForValue) {
      if (connectionsBuilder_ == null) {
        connections_ = builderForValue.build();
      } else {
        connectionsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport connections = 4;</code>
     */
    public Builder mergeConnections(io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport value) {
      if (connectionsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          connections_ != null &&
          connections_ != io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport.getDefaultInstance()) {
          getConnectionsBuilder().mergeFrom(value);
        } else {
          connections_ = value;
        }
      } else {
        connectionsBuilder_.mergeFrom(value);
      }
      if (connections_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport connections = 4;</code>
     */
    public Builder clearConnections() {
      bitField0_ = (bitField0_ & ~0x00000008);
      connections_ = null;
      if (connectionsBuilder_ != null) {
        connectionsBuilder_.dispose();
        connectionsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport connections = 4;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport.Builder getConnectionsBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getConnectionsFieldBuilder().getBuilder();
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport connections = 4;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReportOrBuilder getConnectionsOrBuilder() {
      if (connectionsBuilder_ != null) {
        return connectionsBuilder_.getMessageOrBuilder();
      } else {
        return connections_ == null ?
            io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport.getDefaultInstance() : connections_;
      }
    }
    /**
     * <code>.io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport connections = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReportOrBuilder> 
        getConnectionsFieldBuilder() {
      if (connectionsBuilder_ == null) {
        connectionsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReportOrBuilder>(
                getConnections(),
                getParentForChildren(),
                isClean());
        connections_ = null;
      }
      return connectionsBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport)
  }

  // @@protoc_insertion_point(class_scope:io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport)
  private static final io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport();
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RootReport>
      PARSER = new com.google.protobuf.AbstractParser<RootReport>() {
    @java.lang.Override
    public RootReport parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RootReport> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RootReport> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.common.RootReport getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

