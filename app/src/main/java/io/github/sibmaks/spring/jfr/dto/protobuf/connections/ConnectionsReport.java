// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: connections.proto
// Protobuf Java Version: 4.29.3

package io.github.sibmaks.spring.jfr.dto.protobuf.connections;

/**
 * Protobuf type {@code io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport}
 */
public final class ConnectionsReport extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport)
    ConnectionsReportOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      ConnectionsReport.class.getName());
  }
  // Use ConnectionsReport.newBuilder() to construct.
  private ConnectionsReport(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ConnectionsReport() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.github.sibmaks.spring.jfr.dto.protobuf.connections.Connections.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_connections_ConnectionsReport_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 1:
        return internalGetContexts();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.github.sibmaks.spring.jfr.dto.protobuf.connections.Connections.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_connections_ConnectionsReport_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport.class, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport.Builder.class);
  }

  public static final int CONTEXTS_FIELD_NUMBER = 1;
  private static final class ContextsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap>newDefaultInstance(
                io.github.sibmaks.spring.jfr.dto.protobuf.connections.Connections.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_connections_ConnectionsReport_ContextsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.INT64,
                0L,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap> contexts_;
  private com.google.protobuf.MapField<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap>
  internalGetContexts() {
    if (contexts_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ContextsDefaultEntryHolder.defaultEntry);
    }
    return contexts_;
  }
  public int getContextsCount() {
    return internalGetContexts().getMap().size();
  }
  /**
   * <code>map&lt;int64, .io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap&gt; contexts = 1;</code>
   */
  @java.lang.Override
  public boolean containsContexts(
      long key) {

    return internalGetContexts().getMap().containsKey(key);
  }
  /**
   * Use {@link #getContextsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap> getContexts() {
    return getContextsMap();
  }
  /**
   * <code>map&lt;int64, .io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap&gt; contexts = 1;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap> getContextsMap() {
    return internalGetContexts().getMap();
  }
  /**
   * <code>map&lt;int64, .io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap&gt; contexts = 1;</code>
   */
  @java.lang.Override
  public /* nullable */
io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap getContextsOrDefault(
      long key,
      /* nullable */
io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap defaultValue) {

    java.util.Map<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap> map =
        internalGetContexts().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int64, .io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap&gt; contexts = 1;</code>
   */
  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap getContextsOrThrow(
      long key) {

    java.util.Map<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap> map =
        internalGetContexts().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessage
      .serializeLongMapTo(
        output,
        internalGetContexts(),
        ContextsDefaultEntryHolder.defaultEntry,
        1);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap> entry
         : internalGetContexts().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap>
      contexts__ = ContextsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, contexts__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport)) {
      return super.equals(obj);
    }
    io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport other = (io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport) obj;

    if (!internalGetContexts().equals(
        other.internalGetContexts())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetContexts().getMap().isEmpty()) {
      hash = (37 * hash) + CONTEXTS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetContexts().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport)
      io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReportOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.connections.Connections.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_connections_ConnectionsReport_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetContexts();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableContexts();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.connections.Connections.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_connections_ConnectionsReport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport.class, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport.Builder.class);
    }

    // Construct using io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      internalGetMutableContexts().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.connections.Connections.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_connections_ConnectionsReport_descriptor;
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport getDefaultInstanceForType() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport.getDefaultInstance();
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport build() {
      io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport buildPartial() {
      io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport result = new io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.contexts_ = internalGetContexts().build(ContextsDefaultEntryHolder.defaultEntry);
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport) {
        return mergeFrom((io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport other) {
      if (other == io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport.getDefaultInstance()) return this;
      internalGetMutableContexts().mergeFrom(
          other.internalGetContexts());
      bitField0_ |= 0x00000001;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.MapEntry<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap>
              contexts__ = input.readMessage(
                  ContextsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableContexts().ensureBuilderMap().put(
                  contexts__.getKey(), contexts__.getValue());
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private static final class ContextsConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMapOrBuilder, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap> {
      @java.lang.Override
      public io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap build(io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMapOrBuilder val) {
        if (val instanceof io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap) { return (io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap) val; }
        return ((io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap.Builder) val).build();
      }

      @java.lang.Override
      public com.google.protobuf.MapEntry<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap> defaultEntry() {
        return ContextsDefaultEntryHolder.defaultEntry;
      }
    };
    private static final ContextsConverter contextsConverter = new ContextsConverter();

    private com.google.protobuf.MapFieldBuilder<
        java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMapOrBuilder, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap.Builder> contexts_;
    private com.google.protobuf.MapFieldBuilder<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMapOrBuilder, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap.Builder>
        internalGetContexts() {
      if (contexts_ == null) {
        return new com.google.protobuf.MapFieldBuilder<>(contextsConverter);
      }
      return contexts_;
    }
    private com.google.protobuf.MapFieldBuilder<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMapOrBuilder, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap.Builder>
        internalGetMutableContexts() {
      if (contexts_ == null) {
        contexts_ = new com.google.protobuf.MapFieldBuilder<>(contextsConverter);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return contexts_;
    }
    public int getContextsCount() {
      return internalGetContexts().ensureBuilderMap().size();
    }
    /**
     * <code>map&lt;int64, .io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap&gt; contexts = 1;</code>
     */
    @java.lang.Override
    public boolean containsContexts(
        long key) {

      return internalGetContexts().ensureBuilderMap().containsKey(key);
    }
    /**
     * Use {@link #getContextsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap> getContexts() {
      return getContextsMap();
    }
    /**
     * <code>map&lt;int64, .io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap&gt; contexts = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap> getContextsMap() {
      return internalGetContexts().getImmutableMap();
    }
    /**
     * <code>map&lt;int64, .io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap&gt; contexts = 1;</code>
     */
    @java.lang.Override
    public /* nullable */
io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap getContextsOrDefault(
        long key,
        /* nullable */
io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap defaultValue) {

      java.util.Map<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMapOrBuilder> map = internalGetMutableContexts().ensureBuilderMap();
      return map.containsKey(key) ? contextsConverter.build(map.get(key)) : defaultValue;
    }
    /**
     * <code>map&lt;int64, .io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap&gt; contexts = 1;</code>
     */
    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap getContextsOrThrow(
        long key) {

      java.util.Map<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMapOrBuilder> map = internalGetMutableContexts().ensureBuilderMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return contextsConverter.build(map.get(key));
    }
    public Builder clearContexts() {
      bitField0_ = (bitField0_ & ~0x00000001);
      internalGetMutableContexts().clear();
      return this;
    }
    /**
     * <code>map&lt;int64, .io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap&gt; contexts = 1;</code>
     */
    public Builder removeContexts(
        long key) {

      internalGetMutableContexts().ensureBuilderMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap>
        getMutableContexts() {
      bitField0_ |= 0x00000001;
      return internalGetMutableContexts().ensureMessageMap();
    }
    /**
     * <code>map&lt;int64, .io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap&gt; contexts = 1;</code>
     */
    public Builder putContexts(
        long key,
        io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap value) {

      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableContexts().ensureBuilderMap()
          .put(key, value);
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>map&lt;int64, .io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap&gt; contexts = 1;</code>
     */
    public Builder putAllContexts(
        java.util.Map<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap> values) {
      for (java.util.Map.Entry<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap> e : values.entrySet()) {
        if (e.getKey() == null || e.getValue() == null) {
          throw new NullPointerException();
        }
      }
      internalGetMutableContexts().ensureBuilderMap()
          .putAll(values);
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>map&lt;int64, .io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap&gt; contexts = 1;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap.Builder putContextsBuilderIfAbsent(
        long key) {
      java.util.Map<java.lang.Long, io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMapOrBuilder> builderMap = internalGetMutableContexts().ensureBuilderMap();
      io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMapOrBuilder entry = builderMap.get(key);
      if (entry == null) {
        entry = io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap.newBuilder();
        builderMap.put(key, entry);
      }
      if (entry instanceof io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap) {
        entry = ((io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap) entry).toBuilder();
        builderMap.put(key, entry);
      }
      return (io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionMap.Builder) entry;
    }

    // @@protoc_insertion_point(builder_scope:io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport)
  }

  // @@protoc_insertion_point(class_scope:io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport)
  private static final io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport();
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ConnectionsReport>
      PARSER = new com.google.protobuf.AbstractParser<ConnectionsReport>() {
    @java.lang.Override
    public ConnectionsReport parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ConnectionsReport> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ConnectionsReport> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.connections.ConnectionsReport getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

