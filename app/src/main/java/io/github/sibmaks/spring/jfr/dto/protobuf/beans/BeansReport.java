// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: beans.proto
// Protobuf Java Version: 4.29.3

package io.github.sibmaks.spring.jfr.dto.protobuf.beans;

/**
 * Protobuf type {@code io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport}
 */
public final class BeansReport extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport)
    BeansReportOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      BeansReport.class.getName());
  }
  // Use BeansReport.newBuilder() to construct.
  private BeansReport(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private BeansReport() {
    beans_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.github.sibmaks.spring.jfr.dto.protobuf.beans.Beans.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_beans_BeansReport_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 1:
        return internalGetBeanDefinitions();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.github.sibmaks.spring.jfr.dto.protobuf.beans.Beans.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_beans_BeansReport_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport.class, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport.Builder.class);
  }

  public static final int BEAN_DEFINITIONS_FIELD_NUMBER = 1;
  private static final class BeanDefinitionsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList>newDefaultInstance(
                io.github.sibmaks.spring.jfr.dto.protobuf.beans.Beans.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_beans_BeansReport_BeanDefinitionsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList> beanDefinitions_;
  private com.google.protobuf.MapField<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList>
  internalGetBeanDefinitions() {
    if (beanDefinitions_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          BeanDefinitionsDefaultEntryHolder.defaultEntry);
    }
    return beanDefinitions_;
  }
  public int getBeanDefinitionsCount() {
    return internalGetBeanDefinitions().getMap().size();
  }
  /**
   * <code>map&lt;int32, .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList&gt; bean_definitions = 1;</code>
   */
  @java.lang.Override
  public boolean containsBeanDefinitions(
      int key) {

    return internalGetBeanDefinitions().getMap().containsKey(key);
  }
  /**
   * Use {@link #getBeanDefinitionsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList> getBeanDefinitions() {
    return getBeanDefinitionsMap();
  }
  /**
   * <code>map&lt;int32, .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList&gt; bean_definitions = 1;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList> getBeanDefinitionsMap() {
    return internalGetBeanDefinitions().getMap();
  }
  /**
   * <code>map&lt;int32, .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList&gt; bean_definitions = 1;</code>
   */
  @java.lang.Override
  public /* nullable */
io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList getBeanDefinitionsOrDefault(
      int key,
      /* nullable */
io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList defaultValue) {

    java.util.Map<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList> map =
        internalGetBeanDefinitions().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList&gt; bean_definitions = 1;</code>
   */
  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList getBeanDefinitionsOrThrow(
      int key) {

    java.util.Map<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList> map =
        internalGetBeanDefinitions().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int BEANS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized> beans_;
  /**
   * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
   */
  @java.lang.Override
  public java.util.List<io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized> getBeansList() {
    return beans_;
  }
  /**
   * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitializedOrBuilder> 
      getBeansOrBuilderList() {
    return beans_;
  }
  /**
   * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
   */
  @java.lang.Override
  public int getBeansCount() {
    return beans_.size();
  }
  /**
   * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
   */
  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized getBeans(int index) {
    return beans_.get(index);
  }
  /**
   * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
   */
  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitializedOrBuilder getBeansOrBuilder(
      int index) {
    return beans_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessage
      .serializeIntegerMapTo(
        output,
        internalGetBeanDefinitions(),
        BeanDefinitionsDefaultEntryHolder.defaultEntry,
        1);
    for (int i = 0; i < beans_.size(); i++) {
      output.writeMessage(2, beans_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList> entry
         : internalGetBeanDefinitions().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList>
      beanDefinitions__ = BeanDefinitionsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, beanDefinitions__);
    }
    for (int i = 0; i < beans_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, beans_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport)) {
      return super.equals(obj);
    }
    io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport other = (io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport) obj;

    if (!internalGetBeanDefinitions().equals(
        other.internalGetBeanDefinitions())) return false;
    if (!getBeansList()
        .equals(other.getBeansList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetBeanDefinitions().getMap().isEmpty()) {
      hash = (37 * hash) + BEAN_DEFINITIONS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetBeanDefinitions().hashCode();
    }
    if (getBeansCount() > 0) {
      hash = (37 * hash) + BEANS_FIELD_NUMBER;
      hash = (53 * hash) + getBeansList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport)
      io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReportOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.beans.Beans.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_beans_BeansReport_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetBeanDefinitions();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableBeanDefinitions();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.beans.Beans.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_beans_BeansReport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport.class, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport.Builder.class);
    }

    // Construct using io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      internalGetMutableBeanDefinitions().clear();
      if (beansBuilder_ == null) {
        beans_ = java.util.Collections.emptyList();
      } else {
        beans_ = null;
        beansBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.beans.Beans.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_beans_BeansReport_descriptor;
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport getDefaultInstanceForType() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport.getDefaultInstance();
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport build() {
      io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport buildPartial() {
      io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport result = new io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport result) {
      if (beansBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          beans_ = java.util.Collections.unmodifiableList(beans_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.beans_ = beans_;
      } else {
        result.beans_ = beansBuilder_.build();
      }
    }

    private void buildPartial0(io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.beanDefinitions_ = internalGetBeanDefinitions().build(BeanDefinitionsDefaultEntryHolder.defaultEntry);
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport) {
        return mergeFrom((io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport other) {
      if (other == io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport.getDefaultInstance()) return this;
      internalGetMutableBeanDefinitions().mergeFrom(
          other.internalGetBeanDefinitions());
      bitField0_ |= 0x00000001;
      if (beansBuilder_ == null) {
        if (!other.beans_.isEmpty()) {
          if (beans_.isEmpty()) {
            beans_ = other.beans_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBeansIsMutable();
            beans_.addAll(other.beans_);
          }
          onChanged();
        }
      } else {
        if (!other.beans_.isEmpty()) {
          if (beansBuilder_.isEmpty()) {
            beansBuilder_.dispose();
            beansBuilder_ = null;
            beans_ = other.beans_;
            bitField0_ = (bitField0_ & ~0x00000002);
            beansBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getBeansFieldBuilder() : null;
          } else {
            beansBuilder_.addAllMessages(other.beans_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.MapEntry<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList>
              beanDefinitions__ = input.readMessage(
                  BeanDefinitionsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableBeanDefinitions().ensureBuilderMap().put(
                  beanDefinitions__.getKey(), beanDefinitions__.getValue());
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized m =
                  input.readMessage(
                      io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized.parser(),
                      extensionRegistry);
              if (beansBuilder_ == null) {
                ensureBeansIsMutable();
                beans_.add(m);
              } else {
                beansBuilder_.addMessage(m);
              }
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private static final class BeanDefinitionsConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionListOrBuilder, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList> {
      @java.lang.Override
      public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList build(io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionListOrBuilder val) {
        if (val instanceof io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList) { return (io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList) val; }
        return ((io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList.Builder) val).build();
      }

      @java.lang.Override
      public com.google.protobuf.MapEntry<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList> defaultEntry() {
        return BeanDefinitionsDefaultEntryHolder.defaultEntry;
      }
    };
    private static final BeanDefinitionsConverter beanDefinitionsConverter = new BeanDefinitionsConverter();

    private com.google.protobuf.MapFieldBuilder<
        java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionListOrBuilder, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList.Builder> beanDefinitions_;
    private com.google.protobuf.MapFieldBuilder<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionListOrBuilder, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList.Builder>
        internalGetBeanDefinitions() {
      if (beanDefinitions_ == null) {
        return new com.google.protobuf.MapFieldBuilder<>(beanDefinitionsConverter);
      }
      return beanDefinitions_;
    }
    private com.google.protobuf.MapFieldBuilder<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionListOrBuilder, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList.Builder>
        internalGetMutableBeanDefinitions() {
      if (beanDefinitions_ == null) {
        beanDefinitions_ = new com.google.protobuf.MapFieldBuilder<>(beanDefinitionsConverter);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return beanDefinitions_;
    }
    public int getBeanDefinitionsCount() {
      return internalGetBeanDefinitions().ensureBuilderMap().size();
    }
    /**
     * <code>map&lt;int32, .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList&gt; bean_definitions = 1;</code>
     */
    @java.lang.Override
    public boolean containsBeanDefinitions(
        int key) {

      return internalGetBeanDefinitions().ensureBuilderMap().containsKey(key);
    }
    /**
     * Use {@link #getBeanDefinitionsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList> getBeanDefinitions() {
      return getBeanDefinitionsMap();
    }
    /**
     * <code>map&lt;int32, .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList&gt; bean_definitions = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList> getBeanDefinitionsMap() {
      return internalGetBeanDefinitions().getImmutableMap();
    }
    /**
     * <code>map&lt;int32, .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList&gt; bean_definitions = 1;</code>
     */
    @java.lang.Override
    public /* nullable */
io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList getBeanDefinitionsOrDefault(
        int key,
        /* nullable */
io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList defaultValue) {

      java.util.Map<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionListOrBuilder> map = internalGetMutableBeanDefinitions().ensureBuilderMap();
      return map.containsKey(key) ? beanDefinitionsConverter.build(map.get(key)) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList&gt; bean_definitions = 1;</code>
     */
    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList getBeanDefinitionsOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionListOrBuilder> map = internalGetMutableBeanDefinitions().ensureBuilderMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return beanDefinitionsConverter.build(map.get(key));
    }
    public Builder clearBeanDefinitions() {
      bitField0_ = (bitField0_ & ~0x00000001);
      internalGetMutableBeanDefinitions().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList&gt; bean_definitions = 1;</code>
     */
    public Builder removeBeanDefinitions(
        int key) {

      internalGetMutableBeanDefinitions().ensureBuilderMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList>
        getMutableBeanDefinitions() {
      bitField0_ |= 0x00000001;
      return internalGetMutableBeanDefinitions().ensureMessageMap();
    }
    /**
     * <code>map&lt;int32, .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList&gt; bean_definitions = 1;</code>
     */
    public Builder putBeanDefinitions(
        int key,
        io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList value) {

      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableBeanDefinitions().ensureBuilderMap()
          .put(key, value);
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>map&lt;int32, .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList&gt; bean_definitions = 1;</code>
     */
    public Builder putAllBeanDefinitions(
        java.util.Map<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList> values) {
      for (java.util.Map.Entry<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList> e : values.entrySet()) {
        if (e.getKey() == null || e.getValue() == null) {
          throw new NullPointerException();
        }
      }
      internalGetMutableBeanDefinitions().ensureBuilderMap()
          .putAll(values);
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>map&lt;int32, .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList&gt; bean_definitions = 1;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList.Builder putBeanDefinitionsBuilderIfAbsent(
        int key) {
      java.util.Map<java.lang.Integer, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionListOrBuilder> builderMap = internalGetMutableBeanDefinitions().ensureBuilderMap();
      io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionListOrBuilder entry = builderMap.get(key);
      if (entry == null) {
        entry = io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList.newBuilder();
        builderMap.put(key, entry);
      }
      if (entry instanceof io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList) {
        entry = ((io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList) entry).toBuilder();
        builderMap.put(key, entry);
      }
      return (io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanDefinitionList.Builder) entry;
    }

    private java.util.List<io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized> beans_ =
      java.util.Collections.emptyList();
    private void ensureBeansIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        beans_ = new java.util.ArrayList<io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized>(beans_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitializedOrBuilder> beansBuilder_;

    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public java.util.List<io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized> getBeansList() {
      if (beansBuilder_ == null) {
        return java.util.Collections.unmodifiableList(beans_);
      } else {
        return beansBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public int getBeansCount() {
      if (beansBuilder_ == null) {
        return beans_.size();
      } else {
        return beansBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized getBeans(int index) {
      if (beansBuilder_ == null) {
        return beans_.get(index);
      } else {
        return beansBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public Builder setBeans(
        int index, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized value) {
      if (beansBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBeansIsMutable();
        beans_.set(index, value);
        onChanged();
      } else {
        beansBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public Builder setBeans(
        int index, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized.Builder builderForValue) {
      if (beansBuilder_ == null) {
        ensureBeansIsMutable();
        beans_.set(index, builderForValue.build());
        onChanged();
      } else {
        beansBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public Builder addBeans(io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized value) {
      if (beansBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBeansIsMutable();
        beans_.add(value);
        onChanged();
      } else {
        beansBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public Builder addBeans(
        int index, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized value) {
      if (beansBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBeansIsMutable();
        beans_.add(index, value);
        onChanged();
      } else {
        beansBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public Builder addBeans(
        io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized.Builder builderForValue) {
      if (beansBuilder_ == null) {
        ensureBeansIsMutable();
        beans_.add(builderForValue.build());
        onChanged();
      } else {
        beansBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public Builder addBeans(
        int index, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized.Builder builderForValue) {
      if (beansBuilder_ == null) {
        ensureBeansIsMutable();
        beans_.add(index, builderForValue.build());
        onChanged();
      } else {
        beansBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public Builder addAllBeans(
        java.lang.Iterable<? extends io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized> values) {
      if (beansBuilder_ == null) {
        ensureBeansIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, beans_);
        onChanged();
      } else {
        beansBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public Builder clearBeans() {
      if (beansBuilder_ == null) {
        beans_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        beansBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public Builder removeBeans(int index) {
      if (beansBuilder_ == null) {
        ensureBeansIsMutable();
        beans_.remove(index);
        onChanged();
      } else {
        beansBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized.Builder getBeansBuilder(
        int index) {
      return getBeansFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitializedOrBuilder getBeansOrBuilder(
        int index) {
      if (beansBuilder_ == null) {
        return beans_.get(index);  } else {
        return beansBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public java.util.List<? extends io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitializedOrBuilder> 
         getBeansOrBuilderList() {
      if (beansBuilder_ != null) {
        return beansBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(beans_);
      }
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized.Builder addBeansBuilder() {
      return getBeansFieldBuilder().addBuilder(
          io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized.getDefaultInstance());
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized.Builder addBeansBuilder(
        int index) {
      return getBeansFieldBuilder().addBuilder(
          index, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized.getDefaultInstance());
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized beans = 2;</code>
     */
    public java.util.List<io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized.Builder> 
         getBeansBuilderList() {
      return getBeansFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitializedOrBuilder> 
        getBeansFieldBuilder() {
      if (beansBuilder_ == null) {
        beansBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitialized.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeanInitializedOrBuilder>(
                beans_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        beans_ = null;
      }
      return beansBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport)
  }

  // @@protoc_insertion_point(class_scope:io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport)
  private static final io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport();
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BeansReport>
      PARSER = new com.google.protobuf.AbstractParser<BeansReport>() {
    @java.lang.Override
    public BeansReport parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<BeansReport> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BeansReport> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.beans.BeansReport getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

