// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: calls.proto
// Protobuf Java Version: 4.29.3

package io.github.sibmaks.spring.jfr.dto.protobuf.calls;

/**
 * Protobuf type {@code io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace}
 */
public final class CallTrace extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace)
    CallTraceOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      CallTrace.class.getName());
  }
  // Use CallTrace.newBuilder() to construct.
  private CallTrace(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private CallTrace() {
    children_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.github.sibmaks.spring.jfr.dto.protobuf.calls.Calls.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_calls_CallTrace_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 9:
        return internalGetDetails();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.github.sibmaks.spring.jfr.dto.protobuf.calls.Calls.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_calls_CallTrace_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.class, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder.class);
  }

  public static final int INVOCATION_ID_FIELD_NUMBER = 1;
  private int invocationId_ = 0;
  /**
   * <code>int32 invocation_id = 1;</code>
   * @return The invocationId.
   */
  @java.lang.Override
  public int getInvocationId() {
    return invocationId_;
  }

  public static final int SUCCESS_FIELD_NUMBER = 2;
  private boolean success_ = false;
  /**
   * <code>bool success = 2;</code>
   * @return The success.
   */
  @java.lang.Override
  public boolean getSuccess() {
    return success_;
  }

  public static final int TYPE_FIELD_NUMBER = 3;
  private int type_ = 0;
  /**
   * <code>int32 type = 3;</code>
   * @return The type.
   */
  @java.lang.Override
  public int getType() {
    return type_;
  }

  public static final int START_TIME_FIELD_NUMBER = 4;
  private long startTime_ = 0L;
  /**
   * <code>int64 start_time = 4;</code>
   * @return The startTime.
   */
  @java.lang.Override
  public long getStartTime() {
    return startTime_;
  }

  public static final int END_TIME_FIELD_NUMBER = 5;
  private long endTime_ = 0L;
  /**
   * <code>int64 end_time = 5;</code>
   * @return The endTime.
   */
  @java.lang.Override
  public long getEndTime() {
    return endTime_;
  }

  public static final int THREAD_NAME_FIELD_NUMBER = 6;
  private int threadName_ = 0;
  /**
   * <code>int32 thread_name = 6;</code>
   * @return The threadName.
   */
  @java.lang.Override
  public int getThreadName() {
    return threadName_;
  }

  public static final int CLASS_NAME_FIELD_NUMBER = 7;
  private int className_ = 0;
  /**
   * <code>int32 class_name = 7;</code>
   * @return The className.
   */
  @java.lang.Override
  public int getClassName() {
    return className_;
  }

  public static final int METHOD_NAME_FIELD_NUMBER = 8;
  private int methodName_ = 0;
  /**
   * <code>int32 method_name = 8;</code>
   * @return The methodName.
   */
  @java.lang.Override
  public int getMethodName() {
    return methodName_;
  }

  public static final int DETAILS_FIELD_NUMBER = 9;
  private static final class DetailsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Integer, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                io.github.sibmaks.spring.jfr.dto.protobuf.calls.Calls.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_calls_CallTrace_DetailsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.INT32,
                0);
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.Integer, java.lang.Integer> details_;
  private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
  internalGetDetails() {
    if (details_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          DetailsDefaultEntryHolder.defaultEntry);
    }
    return details_;
  }
  public int getDetailsCount() {
    return internalGetDetails().getMap().size();
  }
  /**
   * <code>map&lt;int32, int32&gt; details = 9;</code>
   */
  @java.lang.Override
  public boolean containsDetails(
      int key) {

    return internalGetDetails().getMap().containsKey(key);
  }
  /**
   * Use {@link #getDetailsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, java.lang.Integer> getDetails() {
    return getDetailsMap();
  }
  /**
   * <code>map&lt;int32, int32&gt; details = 9;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.Integer, java.lang.Integer> getDetailsMap() {
    return internalGetDetails().getMap();
  }
  /**
   * <code>map&lt;int32, int32&gt; details = 9;</code>
   */
  @java.lang.Override
  public int getDetailsOrDefault(
      int key,
      int defaultValue) {

    java.util.Map<java.lang.Integer, java.lang.Integer> map =
        internalGetDetails().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, int32&gt; details = 9;</code>
   */
  @java.lang.Override
  public int getDetailsOrThrow(
      int key) {

    java.util.Map<java.lang.Integer, java.lang.Integer> map =
        internalGetDetails().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int CHILDREN_FIELD_NUMBER = 10;
  @SuppressWarnings("serial")
  private java.util.List<io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace> children_;
  /**
   * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
   */
  @java.lang.Override
  public java.util.List<io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace> getChildrenList() {
    return children_;
  }
  /**
   * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceOrBuilder> 
      getChildrenOrBuilderList() {
    return children_;
  }
  /**
   * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
   */
  @java.lang.Override
  public int getChildrenCount() {
    return children_.size();
  }
  /**
   * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
   */
  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace getChildren(int index) {
    return children_.get(index);
  }
  /**
   * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
   */
  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceOrBuilder getChildrenOrBuilder(
      int index) {
    return children_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (invocationId_ != 0) {
      output.writeInt32(1, invocationId_);
    }
    if (success_ != false) {
      output.writeBool(2, success_);
    }
    if (type_ != 0) {
      output.writeInt32(3, type_);
    }
    if (startTime_ != 0L) {
      output.writeInt64(4, startTime_);
    }
    if (endTime_ != 0L) {
      output.writeInt64(5, endTime_);
    }
    if (threadName_ != 0) {
      output.writeInt32(6, threadName_);
    }
    if (className_ != 0) {
      output.writeInt32(7, className_);
    }
    if (methodName_ != 0) {
      output.writeInt32(8, methodName_);
    }
    com.google.protobuf.GeneratedMessage
      .serializeIntegerMapTo(
        output,
        internalGetDetails(),
        DetailsDefaultEntryHolder.defaultEntry,
        9);
    for (int i = 0; i < children_.size(); i++) {
      output.writeMessage(10, children_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (invocationId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, invocationId_);
    }
    if (success_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, success_);
    }
    if (type_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, type_);
    }
    if (startTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, startTime_);
    }
    if (endTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, endTime_);
    }
    if (threadName_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, threadName_);
    }
    if (className_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, className_);
    }
    if (methodName_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, methodName_);
    }
    for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
         : internalGetDetails().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
      details__ = DetailsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, details__);
    }
    for (int i = 0; i < children_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, children_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace)) {
      return super.equals(obj);
    }
    io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace other = (io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace) obj;

    if (getInvocationId()
        != other.getInvocationId()) return false;
    if (getSuccess()
        != other.getSuccess()) return false;
    if (getType()
        != other.getType()) return false;
    if (getStartTime()
        != other.getStartTime()) return false;
    if (getEndTime()
        != other.getEndTime()) return false;
    if (getThreadName()
        != other.getThreadName()) return false;
    if (getClassName()
        != other.getClassName()) return false;
    if (getMethodName()
        != other.getMethodName()) return false;
    if (!internalGetDetails().equals(
        other.internalGetDetails())) return false;
    if (!getChildrenList()
        .equals(other.getChildrenList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + INVOCATION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getInvocationId();
    hash = (37 * hash) + SUCCESS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSuccess());
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getType();
    hash = (37 * hash) + START_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getStartTime());
    hash = (37 * hash) + END_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getEndTime());
    hash = (37 * hash) + THREAD_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getThreadName();
    hash = (37 * hash) + CLASS_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getClassName();
    hash = (37 * hash) + METHOD_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getMethodName();
    if (!internalGetDetails().getMap().isEmpty()) {
      hash = (37 * hash) + DETAILS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetDetails().hashCode();
    }
    if (getChildrenCount() > 0) {
      hash = (37 * hash) + CHILDREN_FIELD_NUMBER;
      hash = (53 * hash) + getChildrenList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace)
      io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.calls.Calls.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_calls_CallTrace_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 9:
          return internalGetDetails();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 9:
          return internalGetMutableDetails();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.calls.Calls.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_calls_CallTrace_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.class, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder.class);
    }

    // Construct using io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      invocationId_ = 0;
      success_ = false;
      type_ = 0;
      startTime_ = 0L;
      endTime_ = 0L;
      threadName_ = 0;
      className_ = 0;
      methodName_ = 0;
      internalGetMutableDetails().clear();
      if (childrenBuilder_ == null) {
        children_ = java.util.Collections.emptyList();
      } else {
        children_ = null;
        childrenBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000200);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.calls.Calls.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_calls_CallTrace_descriptor;
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace getDefaultInstanceForType() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.getDefaultInstance();
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace build() {
      io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace buildPartial() {
      io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace result = new io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace result) {
      if (childrenBuilder_ == null) {
        if (((bitField0_ & 0x00000200) != 0)) {
          children_ = java.util.Collections.unmodifiableList(children_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.children_ = children_;
      } else {
        result.children_ = childrenBuilder_.build();
      }
    }

    private void buildPartial0(io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.invocationId_ = invocationId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.success_ = success_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.type_ = type_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.startTime_ = startTime_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.endTime_ = endTime_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.threadName_ = threadName_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.className_ = className_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.methodName_ = methodName_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.details_ = internalGetDetails();
        result.details_.makeImmutable();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace) {
        return mergeFrom((io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace other) {
      if (other == io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.getDefaultInstance()) return this;
      if (other.getInvocationId() != 0) {
        setInvocationId(other.getInvocationId());
      }
      if (other.getSuccess() != false) {
        setSuccess(other.getSuccess());
      }
      if (other.getType() != 0) {
        setType(other.getType());
      }
      if (other.getStartTime() != 0L) {
        setStartTime(other.getStartTime());
      }
      if (other.getEndTime() != 0L) {
        setEndTime(other.getEndTime());
      }
      if (other.getThreadName() != 0) {
        setThreadName(other.getThreadName());
      }
      if (other.getClassName() != 0) {
        setClassName(other.getClassName());
      }
      if (other.getMethodName() != 0) {
        setMethodName(other.getMethodName());
      }
      internalGetMutableDetails().mergeFrom(
          other.internalGetDetails());
      bitField0_ |= 0x00000100;
      if (childrenBuilder_ == null) {
        if (!other.children_.isEmpty()) {
          if (children_.isEmpty()) {
            children_ = other.children_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureChildrenIsMutable();
            children_.addAll(other.children_);
          }
          onChanged();
        }
      } else {
        if (!other.children_.isEmpty()) {
          if (childrenBuilder_.isEmpty()) {
            childrenBuilder_.dispose();
            childrenBuilder_ = null;
            children_ = other.children_;
            bitField0_ = (bitField0_ & ~0x00000200);
            childrenBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getChildrenFieldBuilder() : null;
          } else {
            childrenBuilder_.addAllMessages(other.children_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              invocationId_ = input.readInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              success_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              type_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              startTime_ = input.readInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              endTime_ = input.readInt64();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              threadName_ = input.readInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              className_ = input.readInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              methodName_ = input.readInt32();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 74: {
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              details__ = input.readMessage(
                  DetailsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableDetails().getMutableMap().put(
                  details__.getKey(), details__.getValue());
              bitField0_ |= 0x00000100;
              break;
            } // case 74
            case 82: {
              io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace m =
                  input.readMessage(
                      io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.parser(),
                      extensionRegistry);
              if (childrenBuilder_ == null) {
                ensureChildrenIsMutable();
                children_.add(m);
              } else {
                childrenBuilder_.addMessage(m);
              }
              break;
            } // case 82
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int invocationId_ ;
    /**
     * <code>int32 invocation_id = 1;</code>
     * @return The invocationId.
     */
    @java.lang.Override
    public int getInvocationId() {
      return invocationId_;
    }
    /**
     * <code>int32 invocation_id = 1;</code>
     * @param value The invocationId to set.
     * @return This builder for chaining.
     */
    public Builder setInvocationId(int value) {

      invocationId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>int32 invocation_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearInvocationId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      invocationId_ = 0;
      onChanged();
      return this;
    }

    private boolean success_ ;
    /**
     * <code>bool success = 2;</code>
     * @return The success.
     */
    @java.lang.Override
    public boolean getSuccess() {
      return success_;
    }
    /**
     * <code>bool success = 2;</code>
     * @param value The success to set.
     * @return This builder for chaining.
     */
    public Builder setSuccess(boolean value) {

      success_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>bool success = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSuccess() {
      bitField0_ = (bitField0_ & ~0x00000002);
      success_ = false;
      onChanged();
      return this;
    }

    private int type_ ;
    /**
     * <code>int32 type = 3;</code>
     * @return The type.
     */
    @java.lang.Override
    public int getType() {
      return type_;
    }
    /**
     * <code>int32 type = 3;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(int value) {

      type_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>int32 type = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      type_ = 0;
      onChanged();
      return this;
    }

    private long startTime_ ;
    /**
     * <code>int64 start_time = 4;</code>
     * @return The startTime.
     */
    @java.lang.Override
    public long getStartTime() {
      return startTime_;
    }
    /**
     * <code>int64 start_time = 4;</code>
     * @param value The startTime to set.
     * @return This builder for chaining.
     */
    public Builder setStartTime(long value) {

      startTime_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>int64 start_time = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearStartTime() {
      bitField0_ = (bitField0_ & ~0x00000008);
      startTime_ = 0L;
      onChanged();
      return this;
    }

    private long endTime_ ;
    /**
     * <code>int64 end_time = 5;</code>
     * @return The endTime.
     */
    @java.lang.Override
    public long getEndTime() {
      return endTime_;
    }
    /**
     * <code>int64 end_time = 5;</code>
     * @param value The endTime to set.
     * @return This builder for chaining.
     */
    public Builder setEndTime(long value) {

      endTime_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>int64 end_time = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearEndTime() {
      bitField0_ = (bitField0_ & ~0x00000010);
      endTime_ = 0L;
      onChanged();
      return this;
    }

    private int threadName_ ;
    /**
     * <code>int32 thread_name = 6;</code>
     * @return The threadName.
     */
    @java.lang.Override
    public int getThreadName() {
      return threadName_;
    }
    /**
     * <code>int32 thread_name = 6;</code>
     * @param value The threadName to set.
     * @return This builder for chaining.
     */
    public Builder setThreadName(int value) {

      threadName_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>int32 thread_name = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearThreadName() {
      bitField0_ = (bitField0_ & ~0x00000020);
      threadName_ = 0;
      onChanged();
      return this;
    }

    private int className_ ;
    /**
     * <code>int32 class_name = 7;</code>
     * @return The className.
     */
    @java.lang.Override
    public int getClassName() {
      return className_;
    }
    /**
     * <code>int32 class_name = 7;</code>
     * @param value The className to set.
     * @return This builder for chaining.
     */
    public Builder setClassName(int value) {

      className_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>int32 class_name = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearClassName() {
      bitField0_ = (bitField0_ & ~0x00000040);
      className_ = 0;
      onChanged();
      return this;
    }

    private int methodName_ ;
    /**
     * <code>int32 method_name = 8;</code>
     * @return The methodName.
     */
    @java.lang.Override
    public int getMethodName() {
      return methodName_;
    }
    /**
     * <code>int32 method_name = 8;</code>
     * @param value The methodName to set.
     * @return This builder for chaining.
     */
    public Builder setMethodName(int value) {

      methodName_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>int32 method_name = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearMethodName() {
      bitField0_ = (bitField0_ & ~0x00000080);
      methodName_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> details_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
        internalGetDetails() {
      if (details_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DetailsDefaultEntryHolder.defaultEntry);
      }
      return details_;
    }
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
        internalGetMutableDetails() {
      if (details_ == null) {
        details_ = com.google.protobuf.MapField.newMapField(
            DetailsDefaultEntryHolder.defaultEntry);
      }
      if (!details_.isMutable()) {
        details_ = details_.copy();
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return details_;
    }
    public int getDetailsCount() {
      return internalGetDetails().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; details = 9;</code>
     */
    @java.lang.Override
    public boolean containsDetails(
        int key) {

      return internalGetDetails().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDetailsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getDetails() {
      return getDetailsMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; details = 9;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, java.lang.Integer> getDetailsMap() {
      return internalGetDetails().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; details = 9;</code>
     */
    @java.lang.Override
    public int getDetailsOrDefault(
        int key,
        int defaultValue) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetDetails().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; details = 9;</code>
     */
    @java.lang.Override
    public int getDetailsOrThrow(
        int key) {

      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetDetails().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearDetails() {
      bitField0_ = (bitField0_ & ~0x00000100);
      internalGetMutableDetails().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;int32, int32&gt; details = 9;</code>
     */
    public Builder removeDetails(
        int key) {

      internalGetMutableDetails().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer>
        getMutableDetails() {
      bitField0_ |= 0x00000100;
      return internalGetMutableDetails().getMutableMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; details = 9;</code>
     */
    public Builder putDetails(
        int key,
        int value) {


      internalGetMutableDetails().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <code>map&lt;int32, int32&gt; details = 9;</code>
     */
    public Builder putAllDetails(
        java.util.Map<java.lang.Integer, java.lang.Integer> values) {
      internalGetMutableDetails().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000100;
      return this;
    }

    private java.util.List<io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace> children_ =
      java.util.Collections.emptyList();
    private void ensureChildrenIsMutable() {
      if (!((bitField0_ & 0x00000200) != 0)) {
        children_ = new java.util.ArrayList<io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace>(children_);
        bitField0_ |= 0x00000200;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceOrBuilder> childrenBuilder_;

    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public java.util.List<io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace> getChildrenList() {
      if (childrenBuilder_ == null) {
        return java.util.Collections.unmodifiableList(children_);
      } else {
        return childrenBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public int getChildrenCount() {
      if (childrenBuilder_ == null) {
        return children_.size();
      } else {
        return childrenBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace getChildren(int index) {
      if (childrenBuilder_ == null) {
        return children_.get(index);
      } else {
        return childrenBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public Builder setChildren(
        int index, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace value) {
      if (childrenBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChildrenIsMutable();
        children_.set(index, value);
        onChanged();
      } else {
        childrenBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public Builder setChildren(
        int index, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder builderForValue) {
      if (childrenBuilder_ == null) {
        ensureChildrenIsMutable();
        children_.set(index, builderForValue.build());
        onChanged();
      } else {
        childrenBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public Builder addChildren(io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace value) {
      if (childrenBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChildrenIsMutable();
        children_.add(value);
        onChanged();
      } else {
        childrenBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public Builder addChildren(
        int index, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace value) {
      if (childrenBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChildrenIsMutable();
        children_.add(index, value);
        onChanged();
      } else {
        childrenBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public Builder addChildren(
        io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder builderForValue) {
      if (childrenBuilder_ == null) {
        ensureChildrenIsMutable();
        children_.add(builderForValue.build());
        onChanged();
      } else {
        childrenBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public Builder addChildren(
        int index, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder builderForValue) {
      if (childrenBuilder_ == null) {
        ensureChildrenIsMutable();
        children_.add(index, builderForValue.build());
        onChanged();
      } else {
        childrenBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public Builder addAllChildren(
        java.lang.Iterable<? extends io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace> values) {
      if (childrenBuilder_ == null) {
        ensureChildrenIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, children_);
        onChanged();
      } else {
        childrenBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public Builder clearChildren() {
      if (childrenBuilder_ == null) {
        children_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
      } else {
        childrenBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public Builder removeChildren(int index) {
      if (childrenBuilder_ == null) {
        ensureChildrenIsMutable();
        children_.remove(index);
        onChanged();
      } else {
        childrenBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder getChildrenBuilder(
        int index) {
      return getChildrenFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceOrBuilder getChildrenOrBuilder(
        int index) {
      if (childrenBuilder_ == null) {
        return children_.get(index);  } else {
        return childrenBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public java.util.List<? extends io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceOrBuilder> 
         getChildrenOrBuilderList() {
      if (childrenBuilder_ != null) {
        return childrenBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(children_);
      }
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder addChildrenBuilder() {
      return getChildrenFieldBuilder().addBuilder(
          io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.getDefaultInstance());
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder addChildrenBuilder(
        int index) {
      return getChildrenFieldBuilder().addBuilder(
          index, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.getDefaultInstance());
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace children = 10;</code>
     */
    public java.util.List<io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder> 
         getChildrenBuilderList() {
      return getChildrenFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceOrBuilder> 
        getChildrenFieldBuilder() {
      if (childrenBuilder_ == null) {
        childrenBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceOrBuilder>(
                children_,
                ((bitField0_ & 0x00000200) != 0),
                getParentForChildren(),
                isClean());
        children_ = null;
      }
      return childrenBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace)
  }

  // @@protoc_insertion_point(class_scope:io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace)
  private static final io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace();
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CallTrace>
      PARSER = new com.google.protobuf.AbstractParser<CallTrace>() {
    @java.lang.Override
    public CallTrace parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CallTrace> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CallTrace> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

