// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kafka.consumer.proto
// Protobuf Java Version: 4.29.3

package io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer;

/**
 * Protobuf type {@code io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats}
 */
public final class KafkaConsumerStats extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats)
    KafkaConsumerStatsOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      KafkaConsumerStats.class.getName());
  }
  // Use KafkaConsumerStats.newBuilder() to construct.
  private KafkaConsumerStats(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private KafkaConsumerStats() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerOuterClass.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_kafka_consumer_KafkaConsumerStats_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerOuterClass.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_kafka_consumer_KafkaConsumerStats_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats.class, io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats.Builder.class);
  }

  public static final int COMMITS_FIELD_NUMBER = 1;
  private int commits_ = 0;
  /**
   * <code>int32 commits = 1;</code>
   * @return The commits.
   */
  @java.lang.Override
  public int getCommits() {
    return commits_;
  }

  public static final int COMMITED_FIELD_NUMBER = 2;
  private int commited_ = 0;
  /**
   * <code>int32 commited = 2;</code>
   * @return The commited.
   */
  @java.lang.Override
  public int getCommited() {
    return commited_;
  }

  public static final int COMMITFAILED_FIELD_NUMBER = 3;
  private int commitFailed_ = 0;
  /**
   * <code>int32 commitFailed = 3;</code>
   * @return The commitFailed.
   */
  @java.lang.Override
  public int getCommitFailed() {
    return commitFailed_;
  }

  public static final int LAST_COMMIT_AT_FIELD_NUMBER = 4;
  private long lastCommitAt_ = 0L;
  /**
   * <code>int64 last_commit_at = 4;</code>
   * @return The lastCommitAt.
   */
  @java.lang.Override
  public long getLastCommitAt() {
    return lastCommitAt_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (commits_ != 0) {
      output.writeInt32(1, commits_);
    }
    if (commited_ != 0) {
      output.writeInt32(2, commited_);
    }
    if (commitFailed_ != 0) {
      output.writeInt32(3, commitFailed_);
    }
    if (lastCommitAt_ != 0L) {
      output.writeInt64(4, lastCommitAt_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (commits_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, commits_);
    }
    if (commited_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, commited_);
    }
    if (commitFailed_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, commitFailed_);
    }
    if (lastCommitAt_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, lastCommitAt_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats)) {
      return super.equals(obj);
    }
    io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats other = (io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats) obj;

    if (getCommits()
        != other.getCommits()) return false;
    if (getCommited()
        != other.getCommited()) return false;
    if (getCommitFailed()
        != other.getCommitFailed()) return false;
    if (getLastCommitAt()
        != other.getLastCommitAt()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + COMMITS_FIELD_NUMBER;
    hash = (53 * hash) + getCommits();
    hash = (37 * hash) + COMMITED_FIELD_NUMBER;
    hash = (53 * hash) + getCommited();
    hash = (37 * hash) + COMMITFAILED_FIELD_NUMBER;
    hash = (53 * hash) + getCommitFailed();
    hash = (37 * hash) + LAST_COMMIT_AT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getLastCommitAt());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats)
      io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStatsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerOuterClass.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_kafka_consumer_KafkaConsumerStats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerOuterClass.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_kafka_consumer_KafkaConsumerStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats.class, io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats.Builder.class);
    }

    // Construct using io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      commits_ = 0;
      commited_ = 0;
      commitFailed_ = 0;
      lastCommitAt_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerOuterClass.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_kafka_consumer_KafkaConsumerStats_descriptor;
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats getDefaultInstanceForType() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats.getDefaultInstance();
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats build() {
      io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats buildPartial() {
      io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats result = new io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.commits_ = commits_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.commited_ = commited_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.commitFailed_ = commitFailed_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.lastCommitAt_ = lastCommitAt_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats) {
        return mergeFrom((io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats other) {
      if (other == io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats.getDefaultInstance()) return this;
      if (other.getCommits() != 0) {
        setCommits(other.getCommits());
      }
      if (other.getCommited() != 0) {
        setCommited(other.getCommited());
      }
      if (other.getCommitFailed() != 0) {
        setCommitFailed(other.getCommitFailed());
      }
      if (other.getLastCommitAt() != 0L) {
        setLastCommitAt(other.getLastCommitAt());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              commits_ = input.readInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              commited_ = input.readInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              commitFailed_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              lastCommitAt_ = input.readInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int commits_ ;
    /**
     * <code>int32 commits = 1;</code>
     * @return The commits.
     */
    @java.lang.Override
    public int getCommits() {
      return commits_;
    }
    /**
     * <code>int32 commits = 1;</code>
     * @param value The commits to set.
     * @return This builder for chaining.
     */
    public Builder setCommits(int value) {

      commits_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>int32 commits = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCommits() {
      bitField0_ = (bitField0_ & ~0x00000001);
      commits_ = 0;
      onChanged();
      return this;
    }

    private int commited_ ;
    /**
     * <code>int32 commited = 2;</code>
     * @return The commited.
     */
    @java.lang.Override
    public int getCommited() {
      return commited_;
    }
    /**
     * <code>int32 commited = 2;</code>
     * @param value The commited to set.
     * @return This builder for chaining.
     */
    public Builder setCommited(int value) {

      commited_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>int32 commited = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCommited() {
      bitField0_ = (bitField0_ & ~0x00000002);
      commited_ = 0;
      onChanged();
      return this;
    }

    private int commitFailed_ ;
    /**
     * <code>int32 commitFailed = 3;</code>
     * @return The commitFailed.
     */
    @java.lang.Override
    public int getCommitFailed() {
      return commitFailed_;
    }
    /**
     * <code>int32 commitFailed = 3;</code>
     * @param value The commitFailed to set.
     * @return This builder for chaining.
     */
    public Builder setCommitFailed(int value) {

      commitFailed_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>int32 commitFailed = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearCommitFailed() {
      bitField0_ = (bitField0_ & ~0x00000004);
      commitFailed_ = 0;
      onChanged();
      return this;
    }

    private long lastCommitAt_ ;
    /**
     * <code>int64 last_commit_at = 4;</code>
     * @return The lastCommitAt.
     */
    @java.lang.Override
    public long getLastCommitAt() {
      return lastCommitAt_;
    }
    /**
     * <code>int64 last_commit_at = 4;</code>
     * @param value The lastCommitAt to set.
     * @return This builder for chaining.
     */
    public Builder setLastCommitAt(long value) {

      lastCommitAt_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>int64 last_commit_at = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearLastCommitAt() {
      bitField0_ = (bitField0_ & ~0x00000008);
      lastCommitAt_ = 0L;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats)
  }

  // @@protoc_insertion_point(class_scope:io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats)
  private static final io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats();
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<KafkaConsumerStats>
      PARSER = new com.google.protobuf.AbstractParser<KafkaConsumerStats>() {
    @java.lang.Override
    public KafkaConsumerStats parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<KafkaConsumerStats> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<KafkaConsumerStats> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.kafka.consumer.KafkaConsumerStats getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

