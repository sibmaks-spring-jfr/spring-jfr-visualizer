// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: calls.proto
// Protobuf Java Version: 4.29.3

package io.github.sibmaks.spring.jfr.dto.protobuf.calls;

/**
 * Protobuf type {@code io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList}
 */
public final class CallTraceList extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList)
    CallTraceListOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      CallTraceList.class.getName());
  }
  // Use CallTraceList.newBuilder() to construct.
  private CallTraceList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private CallTraceList() {
    callTraces_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.github.sibmaks.spring.jfr.dto.protobuf.calls.Calls.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_calls_CallTraceList_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.github.sibmaks.spring.jfr.dto.protobuf.calls.Calls.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_calls_CallTraceList_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList.class, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList.Builder.class);
  }

  public static final int CALL_TRACES_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace> callTraces_;
  /**
   * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
   */
  @java.lang.Override
  public java.util.List<io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace> getCallTracesList() {
    return callTraces_;
  }
  /**
   * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceOrBuilder> 
      getCallTracesOrBuilderList() {
    return callTraces_;
  }
  /**
   * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
   */
  @java.lang.Override
  public int getCallTracesCount() {
    return callTraces_.size();
  }
  /**
   * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
   */
  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace getCallTraces(int index) {
    return callTraces_.get(index);
  }
  /**
   * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
   */
  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceOrBuilder getCallTracesOrBuilder(
      int index) {
    return callTraces_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < callTraces_.size(); i++) {
      output.writeMessage(1, callTraces_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < callTraces_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, callTraces_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList)) {
      return super.equals(obj);
    }
    io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList other = (io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList) obj;

    if (!getCallTracesList()
        .equals(other.getCallTracesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getCallTracesCount() > 0) {
      hash = (37 * hash) + CALL_TRACES_FIELD_NUMBER;
      hash = (53 * hash) + getCallTracesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList)
      io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceListOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.calls.Calls.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_calls_CallTraceList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.calls.Calls.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_calls_CallTraceList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList.class, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList.Builder.class);
    }

    // Construct using io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (callTracesBuilder_ == null) {
        callTraces_ = java.util.Collections.emptyList();
      } else {
        callTraces_ = null;
        callTracesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.calls.Calls.internal_static_io_github_sibmaks_spring_jfr_dto_protobuf_calls_CallTraceList_descriptor;
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList getDefaultInstanceForType() {
      return io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList.getDefaultInstance();
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList build() {
      io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList buildPartial() {
      io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList result = new io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList result) {
      if (callTracesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          callTraces_ = java.util.Collections.unmodifiableList(callTraces_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.callTraces_ = callTraces_;
      } else {
        result.callTraces_ = callTracesBuilder_.build();
      }
    }

    private void buildPartial0(io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList) {
        return mergeFrom((io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList other) {
      if (other == io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList.getDefaultInstance()) return this;
      if (callTracesBuilder_ == null) {
        if (!other.callTraces_.isEmpty()) {
          if (callTraces_.isEmpty()) {
            callTraces_ = other.callTraces_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCallTracesIsMutable();
            callTraces_.addAll(other.callTraces_);
          }
          onChanged();
        }
      } else {
        if (!other.callTraces_.isEmpty()) {
          if (callTracesBuilder_.isEmpty()) {
            callTracesBuilder_.dispose();
            callTracesBuilder_ = null;
            callTraces_ = other.callTraces_;
            bitField0_ = (bitField0_ & ~0x00000001);
            callTracesBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getCallTracesFieldBuilder() : null;
          } else {
            callTracesBuilder_.addAllMessages(other.callTraces_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace m =
                  input.readMessage(
                      io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.parser(),
                      extensionRegistry);
              if (callTracesBuilder_ == null) {
                ensureCallTracesIsMutable();
                callTraces_.add(m);
              } else {
                callTracesBuilder_.addMessage(m);
              }
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace> callTraces_ =
      java.util.Collections.emptyList();
    private void ensureCallTracesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        callTraces_ = new java.util.ArrayList<io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace>(callTraces_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceOrBuilder> callTracesBuilder_;

    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public java.util.List<io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace> getCallTracesList() {
      if (callTracesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(callTraces_);
      } else {
        return callTracesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public int getCallTracesCount() {
      if (callTracesBuilder_ == null) {
        return callTraces_.size();
      } else {
        return callTracesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace getCallTraces(int index) {
      if (callTracesBuilder_ == null) {
        return callTraces_.get(index);
      } else {
        return callTracesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public Builder setCallTraces(
        int index, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace value) {
      if (callTracesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCallTracesIsMutable();
        callTraces_.set(index, value);
        onChanged();
      } else {
        callTracesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public Builder setCallTraces(
        int index, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder builderForValue) {
      if (callTracesBuilder_ == null) {
        ensureCallTracesIsMutable();
        callTraces_.set(index, builderForValue.build());
        onChanged();
      } else {
        callTracesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public Builder addCallTraces(io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace value) {
      if (callTracesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCallTracesIsMutable();
        callTraces_.add(value);
        onChanged();
      } else {
        callTracesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public Builder addCallTraces(
        int index, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace value) {
      if (callTracesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCallTracesIsMutable();
        callTraces_.add(index, value);
        onChanged();
      } else {
        callTracesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public Builder addCallTraces(
        io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder builderForValue) {
      if (callTracesBuilder_ == null) {
        ensureCallTracesIsMutable();
        callTraces_.add(builderForValue.build());
        onChanged();
      } else {
        callTracesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public Builder addCallTraces(
        int index, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder builderForValue) {
      if (callTracesBuilder_ == null) {
        ensureCallTracesIsMutable();
        callTraces_.add(index, builderForValue.build());
        onChanged();
      } else {
        callTracesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public Builder addAllCallTraces(
        java.lang.Iterable<? extends io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace> values) {
      if (callTracesBuilder_ == null) {
        ensureCallTracesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, callTraces_);
        onChanged();
      } else {
        callTracesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public Builder clearCallTraces() {
      if (callTracesBuilder_ == null) {
        callTraces_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        callTracesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public Builder removeCallTraces(int index) {
      if (callTracesBuilder_ == null) {
        ensureCallTracesIsMutable();
        callTraces_.remove(index);
        onChanged();
      } else {
        callTracesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder getCallTracesBuilder(
        int index) {
      return getCallTracesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceOrBuilder getCallTracesOrBuilder(
        int index) {
      if (callTracesBuilder_ == null) {
        return callTraces_.get(index);  } else {
        return callTracesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public java.util.List<? extends io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceOrBuilder> 
         getCallTracesOrBuilderList() {
      if (callTracesBuilder_ != null) {
        return callTracesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(callTraces_);
      }
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder addCallTracesBuilder() {
      return getCallTracesFieldBuilder().addBuilder(
          io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.getDefaultInstance());
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder addCallTracesBuilder(
        int index) {
      return getCallTracesFieldBuilder().addBuilder(
          index, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.getDefaultInstance());
    }
    /**
     * <code>repeated .io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace call_traces = 1;</code>
     */
    public java.util.List<io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder> 
         getCallTracesBuilderList() {
      return getCallTracesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceOrBuilder> 
        getCallTracesFieldBuilder() {
      if (callTracesBuilder_ == null) {
        callTracesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTrace.Builder, io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceOrBuilder>(
                callTraces_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        callTraces_ = null;
      }
      return callTracesBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList)
  }

  // @@protoc_insertion_point(class_scope:io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList)
  private static final io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList();
  }

  public static io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CallTraceList>
      PARSER = new com.google.protobuf.AbstractParser<CallTraceList>() {
    @java.lang.Override
    public CallTraceList parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CallTraceList> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CallTraceList> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.github.sibmaks.spring.jfr.dto.protobuf.calls.CallTraceList getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

